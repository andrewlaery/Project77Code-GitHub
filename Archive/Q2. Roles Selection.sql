-- Creates a new table to temporarily store a forecast agenda.
-- As the Forecast Agenda table is built, the member entries are counted and combined to re-adjust a ranking table.



-- Create forecast table which needs to be updated...
DROP TABLE IF EXISTS TTX_FORECAST0;
CREATE TABLE TTX_FORECAST0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , meetingdate DATE);
-- SELECT * FROM TTX_FORECAST0;

-- ==============================

-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Speaker'
        ORDER BY Rank , NameFull
        LIMIT 3;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Toastmaster'
        ORDER BY Rank , NameFull
        LIMIT 2;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Speech Evaluator'
        ORDER BY Rank , NameFull
        LIMIT 5;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'General Evaluator'
        ORDER BY Rank , NameFull
        LIMIT 1;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Table Topics Master'
        ORDER BY Rank , NameFull
        LIMIT 1;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Grammarian'
        ORDER BY Rank , NameFull
        LIMIT 1;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Ah-Counter'
        ORDER BY Rank , NameFull
        LIMIT 1;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Timer'
        ORDER BY Rank , NameFull
        LIMIT 1;
-- SELECT * FROM TTX_FORECAST0;


-- Insert loops for each role, need to set Role and Limit for each loop.
-- Create count of forecast table
DROP VIEW IF EXISTS V_TTX_FORECAST_COUNT;
CREATE VIEW V_TTX_FORECAST_COUNT AS
	SELECT 
        NameFull ,
        COUNT(*)*100000000 AS RankAdder
    FROM TTX_FORECAST0
    GROUP BY NameFull;
-- SELECT * FROM V_TTX_FORECAST_COUNT;
-- Create full ranking view linked to forecast table
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
CREATE TABLE TTX_TMI_ROLES_MEMBER_RANKED0 (id SERIAL , NameFull VARCHAR(255) , Role VARCHAR(255) , Date1Num INT DEFAULT 1, RankAdder INT DEFAULT 1, Rank INT);
INSERT INTO TTX_TMI_ROLES_MEMBER_RANKED0 (NameFull , Role , Date1Num , RankAdder , Rank)
    SELECT 
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull ,
        V_CONTESTABLE_TMIROLES_TO_MEMBERS2.Role ,
        IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) ,
        IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1) ,
       (IFNULL(CAST(V_MOSTRECENTROLE2.Date1 AS unsigned),1) + IFNULL(V_TTX_FORECAST_COUNT.RankAdder,1))
    FROM V_CONTESTABLE_TMIROLES_TO_MEMBERS2
    LEFT JOIN V_MOSTRECENTROLE2 ON V_MOSTRECENTROLE2.NameFull_Role = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull_Role
    LEFT JOIN V_TTX_FORECAST_COUNT ON V_TTX_FORECAST_COUNT.NameFull = V_CONTESTABLE_TMIROLES_TO_MEMBERS2.NameFull;
-- SELECT * FROM TTX_TMI_ROLES_MEMBER_RANKED0 GROUP BY NameFull , Role ORDER BY Role , Rank;
INSERT INTO TTX_FORECAST0 (NameFull , Role)
	SELECT NameFull , Role
 		FROM TTX_TMI_ROLES_MEMBER_RANKED0
        WHERE Role = 'Table Topics Speaker'
        ORDER BY Rank , NameFull
        LIMIT 10;
SELECT * FROM TTX_FORECAST0;


DROP TABLE IF EXISTS TTX_FORECAST0;
DROP TABLE IF EXISTS TTX_TMI_ROLES_MEMBER_RANKED0;
