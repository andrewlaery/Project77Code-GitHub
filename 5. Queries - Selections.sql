-- SELECT * FROM RECORDS_MEMBERS;
-- SELECT * FROM TTX_TMI_STRUCTURE0;
-- SELECT * FROM TMI_ROLES;
-- SELECT * FROM TMI_MANUALS;
-- SELECT * FROM TMI_PROJECTS;
-- SELECT * FROM RECORDS_MEMBER_UNAVAILABILITY ;
-- SELECT * FROM TTX_RECORDS_MEMBER_UNAVAILABILITY0;
/*
SET @currentclubs = 'Corporate Toastmasters';
SET @currentmember = 'Yes';
SET @MeetingDate = '2017-08-30';
SET @Role1 = 'Speaker';
SET @Role2 = 'Toastmaster';
SET @Role3 = 'Speech Evaluator';
SET @Role4 = 'General Evaluator';
SET @Role5 = 'Table Topics Master';
SET @Role6 = 'Grammarian';
SET @Role7 = 'Ah-Counter';
SET @Role8 = 'Timer';
SET @Role9 = 'Table Topics Speaker';
SET @Limit1 = '3';
SET @Limit2 = '2';
SET @Limit3 = '5';
SET @Limit4 = '1';
SET @Limit5 = '1';
SET @Limit6 = '1';
SET @Limit7 = '1';
SET @Limit8 = '1';
SET @Limit9 = '6';
*/

SET @currentclubs = 'Corporate Toastmasters';
SET @currentmember = 'Yes';
SET @MeetingDate = '2017-08-30';

-- ========================================================


SET @Role1 = 'Speaker';

-- Lists members who are UNAVAILABILE for this meeting for this role.
DROP TEMPORARY TABLE IF EXISTS TTX_RECORDS_MEMBER_UNAVAILABILITY1;
CREATE TEMPORARY TABLE TTX_RECORDS_MEMBER_UNAVAILABILITY1 AS
	SELECT * FROM TTX_RECORDS_MEMBER_UNAVAILABILITY0
	WHERE
		StartDate <= @MeetingDate
		AND  EndDate >= @MeetingDate
		AND (RolesID = '41' OR Role = @Role1);
SELECT * FROM TTX_RECORDS_MEMBER_UNAVAILABILITY1;

-- Lists members who are AVAILABILE for this meeting for this role.
DROP TEMPORARY TABLE IF EXISTS TTX_RECORDS_MEMBER_AVAILABLE1;
CREATE TEMPORARY TABLE TTX_RECORDS_MEMBER_AVAILABLE1 AS
	SELECT
		MembersID ,
        NameFull
	FROM TTX_ALLMEMBERS0
	WHERE
		currentclubs = @currentclubs
		AND currentmember = @currentmember
		AND (NameFull NOT IN (SELECT NameFull FROM TTX_RECORDS_MEMBER_UNAVAILABILITY1));
SELECT * FROM TTX_RECORDS_MEMBER_AVAILABLE1;

-- Lists ALL members for this role, ranked by date.
DROP TEMPORARY TABLE IF EXISTS TTX_MOSTRECENTROLE_ALLRANK0;
CREATE TEMPORARY TABLE TTX_MOSTRECENTROLE_ALLRANK0 AS
	SELECT
		MembersID ,
        NameFull ,
		Date1
	FROM TTX_MOSTRECENTROLE0
	WHERE Role = @Role1;
SELECT * FROM TTX_MOSTRECENTROLE_ALLRANK0;

-- Lists members who are AVAILABILE for this meeting for this role, ranked by date.
DROP TEMPORARY TABLE IF EXISTS TTX_MOSTRECENTROLE_SELECTIONRANK0;
CREATE TEMPORARY TABLE TTX_MOSTRECENTROLE_SELECTIONRANK0 AS
	SELECT
		TTX_RECORDS_MEMBER_AVAILABLE1.MembersID AS MembersID ,
        TTX_RECORDS_MEMBER_AVAILABLE1.NameFull AS NameFull ,
		TTX_MOSTRECENTROLE_ALLRANK0.Date1 AS Date1
	FROM TTX_RECORDS_MEMBER_AVAILABLE1
	LEFT JOIN TTX_MOSTRECENTROLE_ALLRANK0 ON TTX_RECORDS_MEMBER_AVAILABLE1.NameFull = TTX_MOSTRECENTROLE_ALLRANK0.NameFull
	ORDER BY Date1 , NameFull;
SELECT * FROM TTX_MOSTRECENTROLE_SELECTIONRANK0;


DROP TEMPORARY TABLE IF EXISTS TTX_ROLESELECTION0;
CREATE TEMPORARY TABLE TTX_ROLESELECTION0 AS
	SELECT
		MembersID ,
        NameFull
	FROM TTX_MOSTRECENTROLE_SELECTIONRANK0
    LIMIT 3;
SELECT * FROM TTX_ROLESELECTION0;
